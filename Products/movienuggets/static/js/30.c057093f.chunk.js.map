{"version":3,"sources":["pages/NetflixIndiaPage.js","components/Typography.js","components/Page.js"],"names":["NetflixIndiaPage","_useState","useState","_useState2","Object","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","movie","setMovie","_useState3","isOpen","fTitle","imgUrl","_useState4","modalData","setModalData","columns","useMediaQuery","query","minWidth","maxWidth","title","field","cellStyle","backgroundColor","color","headerStyle","fontSize","render","rowData","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","Fragment","className","width","height","onClick","ftitle","url","openModal","src","thumbnail","useEffect","getNetflixIndia","then","res","data","catch","error","console","log","components_Page__WEBPACK_IMPORTED_MODULE_1__","breadcrumbs","name","active","material_table__WEBPACK_IMPORTED_MODULE_4___default","options","filtering","filterCellStyle","paging","pageSize","pageSizeOptions","exportButton","_Popup__WEBPACK_IMPORTED_MODULE_8__","isOpenModal","closeModal","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","type","restProps","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","assign","defaultProps","bem","bn","create","Page","children","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","key"],"mappings":"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","file":"static/js/30.c057093f.chunk.js","sourcesContent":["import Page from 'components/Page';\nimport React from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, Table } from 'reactstrap';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport MaterialTable from 'material-table';\n// import { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-tailwind/react/Icon\";\n\nimport { useMediaQuery } from 'react-responsive';\nimport { getMoviesData,getNetflix,getNetflixIndia,getAmazonPrime,getAmazonIndia,getSonyLiv,getZee } from '../services/appService';\nimport Popup from './Popup';\n\nconst tableTypes = ['', 'bordered', 'striped', 'hover'];\n\nconst NetflixIndiaPage = () => {\n  const [movie, setMovie] = useState([]);\n  const [modalData,setModalData] = useState({isOpen: false,fTitle: '',imgUrl: ''});\n  const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 })\n  const options = {\n    filtering: true,\n    filterCellStyle: {\n      backgroundColor: '#A9E3FF',\n      color: '#FFF'\n    },\n    paging: true,\n    pageSize: 10,\n    pageSizeOptions: [25, 50, 100, 250],\n    exportButton: true,\n  };\n  const openModal = (rowData) => {\n    setModalData({isOpen: true,ftitle: rowData.fTitle,imgUrl: rowData.url})\n  }\n\n  const columns = [\n    {\n      title: 'Movie Name',\n      field: 'title',\n      cellStyle: {\n        backgroundColor: '#039be5',\n        color: '#FFF'\n      },\n      headerStyle: {\n        backgroundColor: '#039be5',\n        color: '#FFF',\n        fontSize:25\n      },\n      render: (rowData) => (\n        rowData && (\n          // <><img width=\"24\" height=\"24\" src={rowData.thumbnail} /> {rowData.title}</>\n          <> {rowData.title}</>\n        )\n      )\n    },\n    {\n      title: 'New Series', field: 'plTitle',\n      headerStyle: {\n        backgroundColor: '#039be5',\n        color: '#FFF',\n        fontSize:25\n      }\n    },\n    {\n      title: 'Views', field: 'views', \n      // defaultSort: 'desc',\n      headerStyle: {\n        backgroundColor: '#039be5',\n        color: '#FFF',\n        fontSize:25\n      }\n    },\n    // {\n    //   title: 'Likes', field: 'likes',\n    //   headerStyle: {\n    //     backgroundColor: '#039be5',\n    //     color: '#FFF',\n    //     fontSize:25\n    //   }\n    // },\n    {\n      title: 'IMDB Rating', field: 'averageRating',\n      headerStyle: {\n        backgroundColor: '#039be5',\n        color: '#FFF',\n        fontSize:25\n      }\n    },\n    {\n      title: 'Link', field: 'url',\n      headerStyle: {\n        backgroundColor: '#039be5',\n        color: '#FFF',\n        fontSize:25\n      },\n\n      render: (rowData) => (\n        <>\n          {/* <a\n            href={rowData.url}\n            target=\"_blank\"\n            style={{ textDecoration: 'none' }}\n          > */}\n            <div className=\"text-center can-click\">\n              <img width=\"100px\" height=\"100px\" onClick={() => openModal(rowData)} className=\"rounded mr-2 mb-2 media-object\" src={rowData.thumbnail} />\n            </div>\n          {/* </a> */}\n        </>\n      ),\n\n    }\n  ]\n  useEffect(() => {\n    getNetflixIndia().then(res => {\n      setMovie(res.data);\n    }).catch(error => {\n      console.log(error);\n    })\n  }, []);\n  return (\n    <Page\n      title=\"Netflix India\"\n      breadcrumbs={[{ name: 'netflix_india', active: true }]}\n      className=\"NetflixIndiaPage\"\n    >\n      <MaterialTable title=\"Movie Trailers Tracker\"\n        data={movie}\n        columns={columns}\n        options={options}\n      />\n    {modalData.isOpen && <Popup isOpenModal={modalData.isOpen} ftitle={modalData.ftitle} imgUrl={modalData.imgUrl} closeModal={()=> setModalData({isOpen: false,fTitle: '',imgUrl: ''})}></Popup>\n}\n    </Page>\n\n  );\n};\n\nexport default NetflixIndiaPage;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n"],"sourceRoot":""}