{"version":3,"sources":["pages/NewDesignPage.js","components/Typography.js","components/Page.js","../node_modules/reactstrap/es/Table.js"],"names":["tableTypes","NewDesignPage","_useState","useState","_useState2","Object","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","movie","setMovie","_useState3","isOpen","fTitle","imgUrl","_useState4","modalData","setModalData","columns","useMediaQuery","query","minWidth","maxWidth","title","field","cellStyle","backgroundColor","color","headerStyle","render","rowData","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","Fragment","defaultSort","className","width","height","onClick","ftitle","url","openModal","src","thumbnail","useEffect","getNetflix","then","res","data","catch","error","console","log","_components_Page__WEBPACK_IMPORTED_MODULE_2__","breadcrumbs","name","active","material_table__WEBPACK_IMPORTED_MODULE_11___default","options","filtering","filterCellStyle","paging","pageSize","pageSizeOptions","exportButton","_Popup__WEBPACK_IMPORTED_MODULE_15__","isOpenModal","closeModal","map","tableType","index","reactstrap__WEBPACK_IMPORTED_MODULE_4__","key","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","body","reactstrap__WEBPACK_IMPORTED_MODULE_9__","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","scope","dark","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","type","restProps","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","assign","defaultProps","bem","bn","create","Page","children","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","length","_ref2","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","string","cssModule","object","size","bordered","bool","borderless","striped","inverse","hover","responsive","oneOfType","responsiveTag","innerRef","func","Table","props","ResponsiveTag","attributes","table","ref","responsiveClassName","__webpack_exports__"],"mappings":"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","file":"static/js/24.dadc30d1.chunk.js","sourcesContent":["import Page from '../components/Page';\nimport React from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, Table } from 'reactstrap';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport MaterialTable from 'material-table';\n// import { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-tailwind/react/Icon\";\n\nimport { useMediaQuery } from 'react-responsive';\nimport { getMoviesData,getNetflix,getSonyLiv } from '../services/appService';\nimport Popup from './Popup';\nconst tableTypes = ['', 'bordered', 'striped', 'hover'];\n\nconst NewDesignPage = () => {\n  const [movie, setMovie] = useState([]);\n  const [modalData,setModalData] = useState({isOpen: false,fTitle: '',imgUrl: ''});\n  const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 })\n  const options = {\n    filtering: true,\n    filterCellStyle: {\n      backgroundColor: '#A9E3FF',\n      color: '#FFF'\n    },\n    paging: true,\n    pageSize: 10,\n    pageSizeOptions: [25, 50, 100, 250],\n    exportButton: true,\n  };\n  const openModal = (rowData) => {\n    setModalData({isOpen: true,ftitle: rowData.fTitle,imgUrl: rowData.url})\n  }\n\n  const columns = [\n    {\n      title: 'Movie Name',\n      field: 'title',\n      cellStyle: {\n        backgroundColor: '#039be5',\n        color: '#FFF'\n      },\n      headerStyle: {\n        backgroundColor: '#039be5',\n        color: '#FFF',\n      },\n      render: (rowData) => (\n        rowData && (\n          // <><img width=\"24\" height=\"24\" src={rowData.thumbnail} /> {rowData.title}</>\n          <> {rowData.title}</>\n        )\n      )\n    },\n    {\n      title: 'New Series', field: 'plTitle',\n      headerStyle: {\n        backgroundColor: '#039be5',\n        color: '#FFF',\n      }\n    },\n    {\n      title: 'Views', field: 'views', defaultSort: 'desc',\n      headerStyle: {\n        backgroundColor: '#039be5',\n        color: '#FFF',\n      }\n    },\n    {\n      title: 'Likes', field: 'likes',\n      headerStyle: {\n        backgroundColor: '#039be5',\n        color: '#FFF',\n      }\n    },\n    // {\n    //   title: 'IMDB Rating', field: 'Rating',\n    //   headerStyle: {\n    //     backgroundColor: '#039be5',\n    //     color: '#FFF',\n    //   }\n    // },\n    {\n      title: 'Link', field: 'url',\n      headerStyle: {\n        backgroundColor: '#039be5',\n        color: '#FFF',\n      },\n\n      render: (rowData) => (\n        <>\n          {/* <a\n            href={rowData.url}\n            target=\"_blank\"\n            style={{ textDecoration: 'none' }}\n          > */}\n            <div className=\"text-center can-click\">\n              <img width=\"100px\" height=\"100px\" onClick={() => openModal(rowData)} className=\"rounded mr-2 mb-2 media-object\" src={rowData.thumbnail} />\n            </div>\n          {/* </a> */}\n        </>\n      ),\n\n    }\n  ]\n  // if(isMobile) {\n  //   options['headerStyle'] = {\n  //     fontSize: columns.length >5 ? 10 : 12,\n  //       padding:5\n  //   }\n  //   options['rowStyle'] = {\n  //     fontSize:columns.length >5 ? 9 : 10,\n  //     padding: 5\n  //   }\n  //   options['cellStyle'] = {\n  //     padding: 3\n  //   }\n  // }\n  // if(isTablet) {\n  //   options['headerStyle'] = {\n  //     fontSize: columns.length >5 ? 12 : 16,\n  //       padding:8\n  //   }\n  //   options['rowStyle'] = {\n  //     fontSize:columns.length >5 ? 12 : 14,\n  //     padding: 8\n  //   }\n  //   options['cellStyle'] = {\n  //     padding: 5\n  //   }\n  // }\n  useEffect(() => {\n    getNetflix().then(res => {\n      setMovie(res.data);\n    }).catch(error => {\n      console.log(error);\n    })\n  }, []);\n  return (\n    <Page\n      title=\"NetFlix\"\n      breadcrumbs={[{ name: 'netflix', active: true }]}\n      className=\"NewTablePage\"\n    >\n      <MaterialTable title=\"Movie Trailers Tracker\"\n        data={movie}\n        columns={columns}\n        options={options}\n      />\n    {modalData.isOpen && <Popup isOpenModal={modalData.isOpen} ftitle={modalData.ftitle} imgUrl={modalData.imgUrl} closeModal={()=> setModalData({isOpen: false,fTitle: '',imgUrl: ''})}></Popup>\n}\n\n      {tableTypes.map((tableType, index) => (\n        <Row key={index}>\n          <Col>\n            <Card className=\"mb-3\">\n              <CardHeader>{tableType || 'default'}</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col>\n                    <Card body>\n                      <Table {...{ [tableType || 'default']: true }}>\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n                            <th scope=\"row\">1</th>\n                            <td>Mark</td>\n                            <td>Otto</td>\n                            <td>@mdo</td>\n                          </tr>\n                          <tr>\n                            <th scope=\"row\">2</th>\n                            <td>Jacob</td>\n                            <td>Thornton</td>\n                            <td>@fat</td>\n                          </tr>\n                          <tr>\n                            <th scope=\"row\">3</th>\n                            <td>Larry</td>\n                            <td>the Bird</td>\n                            <td>@twitter</td>\n                          </tr>\n                        </tbody>\n                      </Table>\n                    </Card>\n                  </Col>\n\n                  <Col>\n                    <Card body>\n                      <Table dark>\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n                            <th scope=\"row\">1</th>\n                            <td>Mark</td>\n                            <td>Otto</td>\n                            <td>@mdo</td>\n                          </tr>\n                          <tr>\n                            <th scope=\"row\">2</th>\n                            <td>Jacob</td>\n                            <td>Thornton</td>\n                            <td>@fat</td>\n                          </tr>\n                          <tr>\n                            <th scope=\"row\">3</th>\n                            <td>Larry</td>\n                            <td>the Bird</td>\n                            <td>@twitter</td>\n                          </tr>\n                        </tbody>\n                      </Table>\n                    </Card>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      ))}\n\n      {/* <Row>\n        <Col>\n          <Card className=\"mb-3\">\n            <CardHeader>Contextual</CardHeader>\n            <CardBody>\n              <Table>\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Type</th>\n                    <th scope=\"col\">Column heading</th>\n                    <th scope=\"col\">Column heading</th>\n                    <th scope=\"col\">Column heading</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr className=\"table-active\">\n                    <th scope=\"row\">Active</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Default</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n\n                  <tr className=\"table-primary\">\n                    <th scope=\"row\">Primary</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-secondary\">\n                    <th scope=\"row\">Secondary</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-success\">\n                    <th scope=\"row\">Success</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-danger\">\n                    <th scope=\"row\">Danger</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-warning\">\n                    <th scope=\"row\">Warning</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-info\">\n                    <th scope=\"row\">Info</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-light\">\n                    <th scope=\"row\">Light</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-dark\">\n                    <th scope=\"row\">Dark</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col>\n          <Card className=\"mb-3\">\n            <CardHeader>Contextual</CardHeader>\n            <CardBody>\n              <Table dark>\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Type</th>\n                    <th scope=\"col\">Column heading</th>\n                    <th scope=\"col\">Column heading</th>\n                    <th scope=\"col\">Column heading</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr className=\"table-active\">\n                    <th scope=\"row\">Active</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Default</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n\n                  <tr className=\"table-primary\">\n                    <th scope=\"row\">Primary</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-secondary\">\n                    <th scope=\"row\">Secondary</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-success\">\n                    <th scope=\"row\">Success</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-danger\">\n                    <th scope=\"row\">Danger</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-warning\">\n                    <th scope=\"row\">Warning</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-info\">\n                    <th scope=\"row\">Info</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-light\">\n                    <th scope=\"row\">Light</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-dark\">\n                    <th scope=\"row\">Dark</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Card className=\"mb-3\">\n            <CardHeader>Responsive</CardHeader>\n            <CardBody>\n              <Table responsive>\n                <thead>\n                  <tr>\n                    <th align=\"center\">Title</th>\n                    <th>Month</th>\n                    <th>Views</th>\n                    <th>Likes</th>\n                    <th>Rating</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {movie\n                    .filter((item) => {\n                        if (searchmonth ==\"\") {\n                        return item;\n                        } else if (\n                        item.plTitle.toLowerCase().includes(searchmonth.toLowerCase()) || item.fTitle.toLowerCase().includes(searchmonth.toLowerCase())\n                        ){\n                        return item;\n                        }\n                        // if (search ==\"\") {\n                        //   return item;\n                        // } else if (\n                        //   item.fTitle.toLowerCase().includes(search.toLowerCase())\n                        //   ){\n                        //   return item;\n                        // }\n                    })\n                    .map((item) => {\n                        return (\n                        <tr key={item.Index}>\n                            <td component=\"th\" scope=\"row\">\n                            {item.fTitle}\n                            </td>\n                            <td align=\"left\">\n                            {item.plTitle}\n                            </td>\n                            <td align=\"left\">\n                            {item.views}\n                            </td>\n                            <td align=\"left\">\n                            {item.likes}\n                            </td>\n                            <td align=\"left\">\n                            {item.Rating}\n                            </td>\n                        </tr>\n                        );\n                    })}  \n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Card className=\"mb-3\">\n            <CardHeader>Size</CardHeader>\n            <CardBody>\n              <Table size=\"sm\">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Username</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">1</th>\n                    <td>Mark</td>\n                    <td>Otto</td>\n                    <td>@mdo</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">2</th>\n                    <td>Jacob</td>\n                    <td>Thornton</td>\n                    <td>@fat</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">3</th>\n                    <td>Larry</td>\n                    <td>the Bird</td>\n                    <td>@twitter</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row> */}\n    </Page>\n\n  );\n};\n\nexport default NewDesignPage;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  inverse: deprecated(PropTypes.bool, 'Please use the prop \"dark\"'),\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      inverse = props.inverse,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"inverse\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark || inverse ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive;\n    return React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;"],"sourceRoot":""}