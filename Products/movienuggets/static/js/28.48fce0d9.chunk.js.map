{"version":3,"sources":["pages/NewDesignPage.js","components/Typography.js","components/Page.js"],"names":["tableTypes","NewDesignPage","_useState","useState","_useState2","Object","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","movie","setMovie","_useState3","_useState4","_useState5","_useState6","isMobile","useMediaQuery","query","minWidth","maxWidth","console","log","columns","title","field","cellStyle","backgroundColor","color","headerStyle","render","rowData","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","Fragment","width","height","src","thumbnail","defaultSort","href","url","target","style","textDecoration","className","class","useEffect","getSonyLiv","then","res","data","catch","error","_components_Page__WEBPACK_IMPORTED_MODULE_2__","breadcrumbs","name","active","material_table__WEBPACK_IMPORTED_MODULE_11___default","options","filtering","filterCellStyle","paging","pageSize","pageSizeOptions","exportButton","map","tableType","index","reactstrap__WEBPACK_IMPORTED_MODULE_4__","key","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","body","reactstrap__WEBPACK_IMPORTED_MODULE_9__","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","scope","dark","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","type","restProps","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","assign","defaultProps","bem","bn","create","Page","children","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","length","_ref2"],"mappings":"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","file":"static/js/28.48fce0d9.chunk.js","sourcesContent":["import Page from '../components/Page';\nimport React from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, Table } from 'reactstrap';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport MaterialTable from 'material-table';\n// import { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-tailwind/react/Icon\";\n\nimport { useMediaQuery } from 'react-responsive';\nimport { getMoviesData,getNetflix,getSonyLiv } from '../services/appService';\nconst tableTypes = ['', 'bordered', 'striped', 'hover'];\n\nconst NewDesignPage = () => {\n  // const classes = useStyles();\n  const [movie, setMovie] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchmonth, setSearchmonth] = useState(\"\");\n\n  const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 })\n  console.log(isMobile);\n  const options = {\n    filtering: true,\n    filterCellStyle: {\n      backgroundColor: '#A9E3FF',\n      color: '#FFF'\n    },\n    paging: true,\n    pageSize: 10,\n    pageSizeOptions: [25, 50, 100, 250],\n    exportButton: true,\n\n  };\n\n  const columns = [\n    {\n      title: 'Movie Name',\n      field: 'title',\n      cellStyle: {\n        backgroundColor: '#039be5',\n        color: '#FFF'\n      },\n      headerStyle: {\n        backgroundColor: '#039be5',\n        color: '#FFF',\n      },\n      render: (rowData) => (\n        rowData && (\n          <><img width=\"24\" height=\"24\" src={rowData.thumbnail} /> {rowData.title}</>\n        )\n      )\n    },\n    {\n      title: 'New Series', field: 'plTitle',\n      headerStyle: {\n        backgroundColor: '#039be5',\n        color: '#FFF',\n      }\n    },\n    {\n      title: 'Views', field: 'views', defaultSort: 'desc',\n      headerStyle: {\n        backgroundColor: '#039be5',\n        color: '#FFF',\n      }\n    },\n    {\n      title: 'IMDB Rating', field: 'averageRating',\n      headerStyle: {\n        backgroundColor: '#039be5',\n        color: '#FFF',\n      }\n    },\n    // {\n    //   title: 'IMDB Rating', field: 'Rating',\n    //   headerStyle: {\n    //     backgroundColor: '#039be5',\n    //     color: '#FFF',\n    //   }\n    // },\n    {\n      title: 'Link', field: 'url',\n      headerStyle: {\n        backgroundColor: '#039be5',\n        color: '#FFF',\n      },\n\n      render: (rowData) => (\n        <>\n          <a\n            href={rowData.url}\n            target=\"_blank\"\n            style={{ textDecoration: 'none' }}\n          >\n            <div className=\"text-center\">\n              <img width=\"100px\" height=\"100px\" class=\"rounded mr-2 mb-2 media-object\" src={rowData.thumbnail} />\n            </div>\n          </a>\n        </>\n      ),\n\n    }\n  ]\n  // if(isMobile) {\n  //   options['headerStyle'] = {\n  //     fontSize: columns.length >5 ? 10 : 12,\n  //       padding:5\n  //   }\n  //   options['rowStyle'] = {\n  //     fontSize:columns.length >5 ? 9 : 10,\n  //     padding: 5\n  //   }\n  //   options['cellStyle'] = {\n  //     padding: 3\n  //   }\n  // }\n  // if(isTablet) {\n  //   options['headerStyle'] = {\n  //     fontSize: columns.length >5 ? 12 : 16,\n  //       padding:8\n  //   }\n  //   options['rowStyle'] = {\n  //     fontSize:columns.length >5 ? 12 : 14,\n  //     padding: 8\n  //   }\n  //   options['cellStyle'] = {\n  //     padding: 5\n  //   }\n  // }\n  useEffect(() => {\n    getSonyLiv().then(res => {\n      setMovie(res.data);\n    }).catch(error => {\n      console.log(error);\n    })\n  }, []);\n  return (\n    <Page\n      title=\"NetFlix\"\n      breadcrumbs={[{ name: 'netflix', active: true }]}\n      className=\"NewTablePage\"\n    >\n      <MaterialTable title=\"Movie Trailers Tracker\"\n        data={movie}\n        columns={columns}\n        options={options}\n      />\n\n      {tableTypes.map((tableType, index) => (\n        <Row key={index}>\n          <Col>\n            <Card className=\"mb-3\">\n              <CardHeader>{tableType || 'default'}</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col>\n                    <Card body>\n                      <Table {...{ [tableType || 'default']: true }}>\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n                            <th scope=\"row\">1</th>\n                            <td>Mark</td>\n                            <td>Otto</td>\n                            <td>@mdo</td>\n                          </tr>\n                          <tr>\n                            <th scope=\"row\">2</th>\n                            <td>Jacob</td>\n                            <td>Thornton</td>\n                            <td>@fat</td>\n                          </tr>\n                          <tr>\n                            <th scope=\"row\">3</th>\n                            <td>Larry</td>\n                            <td>the Bird</td>\n                            <td>@twitter</td>\n                          </tr>\n                        </tbody>\n                      </Table>\n                    </Card>\n                  </Col>\n\n                  <Col>\n                    <Card body>\n                      <Table dark>\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n                            <th scope=\"row\">1</th>\n                            <td>Mark</td>\n                            <td>Otto</td>\n                            <td>@mdo</td>\n                          </tr>\n                          <tr>\n                            <th scope=\"row\">2</th>\n                            <td>Jacob</td>\n                            <td>Thornton</td>\n                            <td>@fat</td>\n                          </tr>\n                          <tr>\n                            <th scope=\"row\">3</th>\n                            <td>Larry</td>\n                            <td>the Bird</td>\n                            <td>@twitter</td>\n                          </tr>\n                        </tbody>\n                      </Table>\n                    </Card>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      ))}\n\n      {/* <Row>\n        <Col>\n          <Card className=\"mb-3\">\n            <CardHeader>Contextual</CardHeader>\n            <CardBody>\n              <Table>\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Type</th>\n                    <th scope=\"col\">Column heading</th>\n                    <th scope=\"col\">Column heading</th>\n                    <th scope=\"col\">Column heading</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr className=\"table-active\">\n                    <th scope=\"row\">Active</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Default</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n\n                  <tr className=\"table-primary\">\n                    <th scope=\"row\">Primary</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-secondary\">\n                    <th scope=\"row\">Secondary</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-success\">\n                    <th scope=\"row\">Success</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-danger\">\n                    <th scope=\"row\">Danger</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-warning\">\n                    <th scope=\"row\">Warning</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-info\">\n                    <th scope=\"row\">Info</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-light\">\n                    <th scope=\"row\">Light</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-dark\">\n                    <th scope=\"row\">Dark</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col>\n          <Card className=\"mb-3\">\n            <CardHeader>Contextual</CardHeader>\n            <CardBody>\n              <Table dark>\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Type</th>\n                    <th scope=\"col\">Column heading</th>\n                    <th scope=\"col\">Column heading</th>\n                    <th scope=\"col\">Column heading</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr className=\"table-active\">\n                    <th scope=\"row\">Active</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Default</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n\n                  <tr className=\"table-primary\">\n                    <th scope=\"row\">Primary</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-secondary\">\n                    <th scope=\"row\">Secondary</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-success\">\n                    <th scope=\"row\">Success</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-danger\">\n                    <th scope=\"row\">Danger</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-warning\">\n                    <th scope=\"row\">Warning</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-info\">\n                    <th scope=\"row\">Info</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-light\">\n                    <th scope=\"row\">Light</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-dark\">\n                    <th scope=\"row\">Dark</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Card className=\"mb-3\">\n            <CardHeader>Responsive</CardHeader>\n            <CardBody>\n              <Table responsive>\n                <thead>\n                  <tr>\n                    <th align=\"center\">Title</th>\n                    <th>Month</th>\n                    <th>Views</th>\n                    <th>Likes</th>\n                    <th>Rating</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {movie\n                    .filter((item) => {\n                        if (searchmonth ==\"\") {\n                        return item;\n                        } else if (\n                        item.plTitle.toLowerCase().includes(searchmonth.toLowerCase()) || item.fTitle.toLowerCase().includes(searchmonth.toLowerCase())\n                        ){\n                        return item;\n                        }\n                        // if (search ==\"\") {\n                        //   return item;\n                        // } else if (\n                        //   item.fTitle.toLowerCase().includes(search.toLowerCase())\n                        //   ){\n                        //   return item;\n                        // }\n                    })\n                    .map((item) => {\n                        return (\n                        <tr key={item.Index}>\n                            <td component=\"th\" scope=\"row\">\n                            {item.fTitle}\n                            </td>\n                            <td align=\"left\">\n                            {item.plTitle}\n                            </td>\n                            <td align=\"left\">\n                            {item.views}\n                            </td>\n                            <td align=\"left\">\n                            {item.likes}\n                            </td>\n                            <td align=\"left\">\n                            {item.Rating}\n                            </td>\n                        </tr>\n                        );\n                    })}  \n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Card className=\"mb-3\">\n            <CardHeader>Size</CardHeader>\n            <CardBody>\n              <Table size=\"sm\">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Username</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">1</th>\n                    <td>Mark</td>\n                    <td>Otto</td>\n                    <td>@mdo</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">2</th>\n                    <td>Jacob</td>\n                    <td>Thornton</td>\n                    <td>@fat</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">3</th>\n                    <td>Larry</td>\n                    <td>the Bird</td>\n                    <td>@twitter</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row> */}\n    </Page>\n\n  );\n};\n\nexport default NewDesignPage;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n"],"sourceRoot":""}