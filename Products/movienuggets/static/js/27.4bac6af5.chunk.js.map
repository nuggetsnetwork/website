{"version":3,"sources":["pages/NetflixPage.js","components/Typography.js","components/Page.js"],"names":["NetflixPage","_useState","useState","_useState2","Object","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","movie","setMovie","_useState3","_useState4","_useState5","_useState6","getMovieData","_ref","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","data","wrap","_context","prev","next","axios","get","sent","console","log","t0","stop","apply","this","arguments","columns","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","title","field","headerStyle","width","cellStyle","backgroundColor","color","fontSize","render","rowData","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","Fragment","href","url","target","style","textDecoration","className","height","class","src","thumbnail","useEffect","components_Page__WEBPACK_IMPORTED_MODULE_4__","breadcrumbs","name","active","padding","border","material_table__WEBPACK_IMPORTED_MODULE_7___default","options","filtering","filterCellStyle","paging","pageSize","pageSizeOptions","exportButton","search","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","TypoComp","Tag","tag","type","restProps","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","react__WEBPACK_IMPORTED_MODULE_3___default","assign","defaultProps","bem","bn","create","Page","children","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","key"],"mappings":"6MAkIeA,UAxHK,WAAM,IAAAC,EAEIC,mBAAS,IAFbC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEfK,EAFeH,EAAA,GAERI,EAFQJ,EAAA,GAAAK,EAGMN,mBAAS,IAHfO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAIgBP,mBAAS,KAJzBS,EAAAP,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GAMhBE,GANgBD,EAAA,GAAAA,EAAA,GAMJ,eAAAE,EAAAT,OAAAU,EAAA,EAAAV,CAAAW,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEEC,IAAMC,IACvB,oDAHe,OAEXN,EAFWE,EAAAK,KAMjBC,QAAQC,IAAIT,EAAKA,MACjBZ,EAASY,EAAKA,MAPGE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SASjBM,QAAQC,IAARP,EAAAQ,IATiB,yBAAAR,EAAAS,SAAAZ,EAAA,iBAAH,yBAAAL,EAAAkB,MAAAC,KAAAC,YAAA,IAaZC,EAAQ,CAAC9B,OAAA+B,EAAA,EAAA/B,CAAA,CAEPgC,MAAM,aAAaC,MAAM,QAAQC,YAAa,CAACC,MAAO,SACtDC,UAAU,CACNC,gBAAiB,UACjBC,MAAM,SALJ,cAOO,CACTD,gBAAiB,UACjBC,MAAM,OACNC,SAAS,KAVPvC,OAAA+B,EAAA,EAAA/B,CAAA,CAcNgC,MAAM,QAAQC,MAAM,UAAUC,YAAa,CAACC,MAAO,UAd7C,cAeO,CACTE,gBAAiB,UACjBC,MAAM,OACNC,SAAS,KAlBPvC,OAAA+B,EAAA,EAAA/B,CAAA,CAsBNgC,MAAM,QAAQC,MAAM,QAAQC,YAAa,CAACC,MAAO,UAtB3C,cAuBO,CACTE,gBAAiB,UACjBC,MAAM,OACNC,SAAS,KA1BPvC,OAAA+B,EAAA,EAAA/B,CAAA,CAsCNgC,MAAM,OAAOC,MAAM,gBAAgBC,YAAa,CAACC,MAAO,UAtClD,cAuCO,CACTE,gBAAiB,UACjBC,MAAM,OACNC,SAAS,KAGjB,CACEP,MAAO,OAAQC,MAAO,MACtBC,YAAa,CACXG,gBAAiB,UACjBC,MAAO,QAGTE,OAAQ,SAACC,GAAD,OACNC,EAAA9B,EAAA+B,cAAAD,EAAA9B,EAAAgC,SAAA,KACEF,EAAA9B,EAAA+B,cAAA,KACEE,KAAMJ,EAAQK,IACdC,OAAO,SACPC,MAAO,CAAEC,eAAgB,SAEzBP,EAAA9B,EAAA+B,cAAA,OAAKO,UAAU,eACbR,EAAA9B,EAAA+B,cAAA,OAAKR,MAAM,QAAQgB,OAAO,QAAQC,MAAM,iCAAiCC,IAAKZ,EAAQa,kBAatG,OAHEC,oBAAU,WACR/C,KACC,IAEHkC,EAAA9B,EAAA+B,cAACa,EAAA,EAAD,CACExB,MAAM,UACNyB,YAAa,CAAC,CAAEC,KAAM,UAAWC,QAAQ,IACzCT,UAAU,eAEZR,EAAA9B,EAAA+B,cAAA,YAAUK,MAAO,CAACY,QAAS,MAAOC,OAAQ,SAC1CnB,EAAA9B,EAAA+B,cAACmB,EAAAlD,EAAD,CAAeoB,MAAM,yBACjBjB,KAAMb,EACN4B,QAASA,EACTiC,QAAS,CACLC,WAAU,EACVC,gBAAgB,CACZ5B,gBAAiB,UACjBC,MAAM,QAEV4B,QAAO,EACPC,SAAS,GACTC,gBAAiB,CAAC,GAAI,GAAI,IAAK,KAC/BC,cAAa,EACbC,QAAO,6FCtHbC,SAAS,CACbC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,YAAa,KACbC,YAAa,KACbC,YAAa,KACbC,YAAa,KACbC,EAAG,IACHC,KAAM,IACNC,WAAY,eAKRC,EAAa,SAAA5E,GAAiD,IAE9D6E,EAFqBC,EAAyC9E,EAA9C+E,IAAUtC,EAAoCzC,EAApCyC,UAAWuC,EAAyBhF,EAAzBgF,KAASC,EAAgB1F,OAAA2F,EAAA,EAAA3F,CAAAS,EAAA,4BAC5DmF,EAAUC,IAAW7F,OAAA+B,EAAA,EAAA/B,CAAA,GAAGyF,IAASA,GAAQvC,GAW/C,OAPEoC,EADEC,KAEQA,GAAOhB,EAAOkB,GACblB,EAAOkB,GAEP,KAGNK,EAAAlF,EAAA+B,cAAC2C,EAADtF,OAAA+F,OAAA,GAAcL,EAAd,CAAyBxC,UAAW0C,MAS7CP,EAAWW,aAAe,CACxBP,KAAM,KAGOJ,8GCtCTY,EAAMC,IAAGC,OAAO,QAEhBC,EAAO,SAAA3F,GAOP,IANJuB,EAMIvB,EANJuB,MACAyB,EAKIhD,EALJgD,YACK8B,EAID9E,EAJJ+E,IACAtC,EAGIzC,EAHJyC,UACAmD,EAEI5F,EAFJ4F,SACGX,EACC1F,OAAAsG,EAAA,EAAAtG,CAAAS,EAAA,sDACEmF,EAAUK,EAAIM,EAAE,OAAQrD,GAE9B,OACEsD,EAAA5F,EAAA+B,cAAC4C,EAADvF,OAAA+F,OAAA,CAAK7C,UAAW0C,GAAaF,GAC3Bc,EAAA5F,EAAA+B,cAAA,OAAKO,UAAW+C,EAAIQ,EAAE,WACnBzE,GAA0B,kBAAVA,EACfwE,EAAA5F,EAAA+B,cAAC+D,EAAA,EAAD,CAAYjB,KAAK,KAAKvC,UAAW+C,EAAIQ,EAAE,UACpCzE,GAGDA,EAEHyB,GACC+C,EAAA5F,EAAA+B,cAACgE,EAAA,EAAD,CAAYzD,UAAW+C,EAAIQ,EAAE,eAC3BD,EAAA5F,EAAA+B,cAACiE,EAAA,EAAD,aACCnD,EAAYoD,QACXpD,EAAYqD,IAAI,SAAAC,EAAmBC,GAAnB,IAAGtD,EAAHqD,EAAGrD,KAAMC,EAAToD,EAASpD,OAAT,OACd6C,EAAA5F,EAAA+B,cAACiE,EAAA,EAAD,CAAgBK,IAAKD,EAAOrD,OAAQA,GACjCD,OAMZ2C,IAkBPD,EAAKJ,aAAe,CAClBR,IAAK,MACLxD,MAAO,IAGMoE","file":"static/js/27.4bac6af5.chunk.js","sourcesContent":["import Page from 'components/Page';\nimport React from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, Table } from 'reactstrap';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport MaterialTable from 'material-table';\n// import { withStyles, makeStyles } from \"@material-ui/core/styles\";\n\nconst tableTypes = ['', 'bordered', 'striped', 'hover'];\n\nconst NetflixPage = () => {\n    // const classes = useStyles();\n    const [movie, setMovie] = useState([]);\n    const [search, setSearch] = useState(\"\");\n    const [searchmonth, setSearchmonth] = useState(\"\");\n  \n    const getMovieData = async () => {\n      try {\n        const data = await axios.get(\n          \"https://nuggetsnetwork.com/Products/Netflix.json\"\n          // \"http://makeup-api.herokuapp.com/api/v1/products.json?brand=maybelline\"\n        );\n        console.log(data.data);\n        setMovie(data.data);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    \n    const columns=[\n        {\n            title:'Movie Name',field:'title',headerStyle: {width: '350px'},\n            cellStyle:{\n                backgroundColor: '#039be5',\n                color:'#FFF'\n            },\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:20\n              }\n        },\n        {\n            title:'Month',field:'plTitle',headerStyle: {width: '350px'},\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:20\n              }\n        },\n        {\n            title:'Views',field:'views',headerStyle: {width: '350px'},\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:20,\n              }\n        },\n        // {\n        //     title:'Likes',field:'likes',headerStyle: {width: '500px'},\n        //     headerStyle: {\n        //         backgroundColor: '#039be5',\n        //         color:'#FFF',\n        //         fontSize:20\n        //       }\n        // },\n        {\n            title:'IMDB',field:'averageRating',headerStyle: {width: '350px'},\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:20\n              }\n        },\n        {\n          title: 'Link', field: 'url',\n          headerStyle: {\n            backgroundColor: '#039be5',\n            color: '#FFF',\n          },\n    \n          render: (rowData) => (\n            <>\n              <a\n                href={rowData.url}\n                target=\"_blank\"\n                style={{ textDecoration: 'none' }}\n              >\n                <div className=\"text-center\">\n                  <img width=\"100px\" height=\"100px\" class=\"rounded mr-2 mb-2 media-object\" src={rowData.thumbnail} />\n                </div>\n              </a>\n            </>\n          ),\n    \n        }\n        \n    ]\n\n    useEffect(() => {\n      getMovieData();\n    }, []);\n  return (\n    <Page\n      title=\"NetFlix\"\n      breadcrumbs={[{ name: 'netflix', active: true }]}\n      className=\"NetflixPage\"\n    >\n    <fieldset style={{padding: '0px', border: 'none'}}>\n    <MaterialTable title=\"Movie Trailers Tracker\"\n        data={movie}\n        columns={columns}\n        options={{\n            filtering:true,\n            filterCellStyle:{\n                backgroundColor: '#A9E3FF',\n                color:'#FFF'\n            },\n            paging:true,\n            pageSize:10,\n            pageSizeOptions: [25, 50, 100, 250],\n            exportButton:false,\n            search:false\n        }}\n        /></fieldset>\n    </Page>\n    \n  );\n};\n\nexport default NetflixPage;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n"],"sourceRoot":""}