{"version":3,"sources":["components/HorizontalAvatarList.js","components/MapWithBubbles.js","components/SupportTicket.js","components/UserProgressTable.js","demos/dashboardPage.js","pages/TailwindCard.js","pages/OwlCarouselSlider.js","pages/DashboardPage.js","components/Typography.js","components/Page.js","utils/colors.js","demos/chartjs.js","components/Widget/NumberWidget.js","components/Widget/IconWidget.js","components/Widget/index.js","assets/img/products/product_640-1.jpg","assets/img/products/product_640-2.jpg","assets/img/products/product_640-3.jpg","assets/img/products/product_640-4.jpg","assets/img/products/product_640-5.jpg","assets/img/products/product_640-6.jpg","assets/img/users/100_6.jpg","assets/img/users/100_7.jpg","assets/img/users/100_8.jpg","assets/img/users/100_9.jpg","assets/img/users/100_10.jpg","assets/img/users/100_11.jpg","assets/img/users/100_12.jpg","assets/img/users/100_13.jpg","assets/img/users/100_14.jpg"],"names":["HorizontalAvatarList","_ref","Tag","tag","avatars","avatarProps","reversed","restProps","Object","objectWithoutProperties","leng","length","count","react_default","a","createElement","assign","className","map","_ref2","i","avatar","name","index","isFirstItem","react","key","Avatar","id","concat","src","style","zIndex","border","marginLeft","marginBottom","marginTop","UncontrolledTooltip","delay","show","hide","target","defaultProps","cityScale","scaleLinear","domain","range","Component","statusMap","open","closed","pending","SupportTicket","date","text","status","onClick","Media","left","body","heading","right","Button","color","defualtProps","AvatarWithBadge","withBadge","position","UserProgressTable","headers","usersData","Table","responsive","hover","item","progress","Progress","value","height","product1Image","product2Image","product3Image","product4Image","product5Image","product6Image","user1Image","user2Image","user3Image","user4Image","user5Image","user6Image","user7Image","user8Image","user9Image","user10Image","user11Image","user12Image","user13Image","user14Image","TailwindCard","title","subscribers","image","link","viewCountMillions","addedViewCountMillions","Fragment","Card_default","CardRow_default","CardHeader_default","size","iconOnly","alt","CardStatus_default","amount","ListGroup","flush","ListGroupItem","Badge","lineHeight","Row","Col","lg","md","sm","xs","class","window","type","OwlCarouselSlider","_useState","useState","_useState2","slicedToArray","details","setDetails","useEffect","console","log","getSonyLiv","then","res","data","getNetflix","getNetflixIndia","getAmazonPrime","getAmazonIndia","getZee","getAha","getMxplayer","_useState3","_useState4","isOpen","setOpen","_useState5","_useState6","_useState7","_useState8","modalData","setModalData","index_es","itemsToShow","breakPoints","width","itemsToScroll","pagination","d","es_Card","url","CardImg","top","thumbnail","CardBody","CardTitle","plTitle","CardText","Modal","scrollable","keyboard","toggle","ModalHeader","ModalBody","react_player_lib_default","controls","playing","today","Date","DashboardPage","getFullYear","getMonth","getDate","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","cardData","_this2","scrollTo","getProductDetails","setState","getColor","Page","breadcrumbs","active","c","pages_TailwindCard","subscriberCountMillions","img","added_viewCountMillions","Typography","pages_OwlCarouselSlider","React","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","TypoComp","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","bem","bn","create","children","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","__webpack_require__","__webpack_exports__","getThemeColors","availableColor","arguments","undefined","getComputedStyle","document","documentElement","getPropertyValue","getStackLineChart","stackLineChartOptions","chart_js__WEBPACK_IMPORTED_MODULE_0__","chart_js__WEBPACK_IMPORTED_MODULE_0___default","n","utils_colors__WEBPACK_IMPORTED_MODULE_1__","labels","canvas","gradient","getContext","createLinearGradient","addColorStop","ChartJS","helpers","alpha","rgbString","datasets","label","borderColor","backgroundColor","fill","tooltips","intersect","animation","duration","scales","xAxes","display","yAxes","legend","NumberWidget","subtitle","number","_ref$progress","Card","IconWidget","bgColor","Icon","icon","iconProps","defineProperty","inverse","CardSubtitle","Widget_NumberWidget","Widget_IconWidget","module","exports"],"mappings":"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","file":"static/js/8.a6bdd565.chunk.js","sourcesContent":["import Avatar from 'components/Avatar';\nimport React, { Fragment } from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport PropTypes from 'utils/propTypes';\n\nconst HorizontalAvatarList = ({\n  tag: Tag,\n  avatars,\n  avatarProps,\n  reversed,\n  ...restProps\n}) => {\n  let leng = reversed ? avatars.length + 1 : 1;\n  const count = reversed ? () => leng-- : () => leng++;\n\n  return (\n    <Tag className=\"d-flex align-items-center\" {...restProps}>\n      {avatars &&\n        avatars.map(({ avatar, name }, i) => {\n          const index = count();\n          const isFirstItem = i === 0;\n\n          return (\n            <Fragment key={index}>\n              <Avatar\n                {...avatarProps}\n                id={`HorizontalAvatarList-avatar-${index}`}\n                src={avatar}\n                style={{\n                  zIndex: index,\n                  border: '3px solid #fff',\n                  marginLeft: !isFirstItem && -20,\n                  marginBottom: '20px',\n                  marginTop:'20px'\n                }}\n              />\n\n              {!!name && (\n                <UncontrolledTooltip\n                  delay={{ show: 0, hide: 0 }}\n                  target={`HorizontalAvatarList-avatar-${index}`}>\n                  {name}\n                </UncontrolledTooltip>\n              )}\n            </Fragment>\n          );\n        })}\n    </Tag>\n  );\n};\n\nHorizontalAvatarList.propTypes = {\n  tag: PropTypes.node,\n  avatars: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n  avatarProps: PropTypes.object,\n  reversed: PropTypes.bool,\n};\n\nHorizontalAvatarList.defaultProps = {\n  tag: 'div',\n  avatars: [],\n  avatarProps: {},\n  reversed: false,\n};\n\nexport default HorizontalAvatarList;\n","import world50m from 'assets/geo-data/world-50m.json';\nimport cities from 'assets/geo-data/world-most-populous-cities.json';\nimport { scaleLinear } from 'd3-scale';\nimport React, { Component } from 'react';\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  Markers,\n  ZoomableGroup,\n} from 'react-simple-maps';\nimport { getColor } from 'utils/colors';\n\nconst cityScale = scaleLinear()\n  .domain([0, 37843000])\n  .range([1, 25]);\n\nclass BubbleMap extends Component {\n  state = {\n    cities,\n  };\n\n  render() {\n    // const primaryColor = getColor('primary');\n    const secondaryColor = getColor('secondary');\n    const lightColor = getColor('light');\n\n    return (\n      <ComposableMap\n        projectionConfig={{ scale: 205 }}\n        width={980}\n        height={551}\n        style={{\n          width: '100%',\n          height: 'auto',\n        }}\n      >\n        <ZoomableGroup center={[0, 20]} disablePanning>\n          <Geographies geography={world50m}>\n            {(geographies, projection) =>\n              geographies.map(\n                (geography, i) =>\n                  geography.id !== 'ATA' && (\n                    <Geography\n                      key={i}\n                      geography={geography}\n                      projection={projection}\n                      style={{\n                        default: {\n                          fill: lightColor,\n                          stroke: lightColor,\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                        hover: {\n                          fill: secondaryColor,\n                          stroke: secondaryColor,\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                        pressed: {\n                          fill: secondaryColor,\n                          stroke: secondaryColor,\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                      }}\n                    />\n                  ),\n              )\n            }\n          </Geographies>\n          <Markers>\n            {this.state.cities.map((city, i) => (\n              <Marker key={i} marker={city}>\n                <circle\n                  cx={0}\n                  cy={0}\n                  r={cityScale(city.population)}\n                  fill={secondaryColor}\n                  stroke={secondaryColor}\n                  strokeWidth=\"2\"\n                />\n              </Marker>\n            ))}\n          </Markers>\n        </ZoomableGroup>\n      </ComposableMap>\n    );\n  }\n}\n\nexport default BubbleMap;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Media, Button } from 'reactstrap';\n\nimport Avatar from './Avatar';\n\nconst statusMap = {\n  open: 'info',\n  closed: 'muted',\n  pending: 'success',\n};\n\nconst SupportTicket = ({\n  avatar,\n  name,\n  date,\n  text,\n  status,\n  onClick,\n  ...restProps\n}) => {\n  return (\n    <div {...restProps}>\n      <Media className=\"m-2\">\n        <Media left className=\"mr-2\">\n          <Avatar src={avatar} />\n        </Media>\n        <Media body>\n          <Media heading tag=\"h6\" className=\"m-0\">\n            {name}\n          </Media>\n          <p className=\"text-muted m-0\">\n            <small>{date}</small>\n          </p>\n        </Media>\n        <Media right className=\"align-self-center\">\n          <Button\n            color=\"link\"\n            className={`text-capitalize text-${statusMap[status]}`}\n          >\n            {status}\n          </Button>\n        </Media>\n      </Media>\n      <Media>\n        <p className=\"text-muted\">{text}</p>\n      </Media>\n    </div>\n  );\n};\n\nSupportTicket.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  date: PropTypes.date,\n  text: PropTypes.string,\n  status: PropTypes.oneOf(['open', 'closed', 'pending']),\n  onClick: PropTypes.func,\n};\n\nSupportTicket.defualtProps = {\n  avatar: '',\n  name: '',\n  date: '',\n  text: '',\n  status: 'pending',\n  onClick: () => {},\n};\n\nexport default SupportTicket;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Table, Progress } from 'reactstrap';\n\nimport Avatar from 'components/Avatar';\n\nimport withBadge from 'hocs/withBadge';\n\nconst AvatarWithBadge = withBadge({\n  position: 'bottom-right',\n  color: 'success',\n})(Avatar);\n\nconst UserProgressTable = ({ headers, usersData, ...restProps }) => {\n  return (\n    <Table responsive hover {...restProps}>\n      <thead>\n        <tr className=\"text-capitalize align-middle text-center\">\n          {headers.map((item, index) => <th key={index}>{item}</th>)}\n        </tr>\n      </thead>\n      <tbody>\n        {usersData.map(({ avatar, name, date, progress }, index) => (\n          <tr key={index}>\n            <td className=\"align-middle text-center\">\n              <AvatarWithBadge src={avatar} />\n            </td>\n            <td className=\"align-middle text-center\">{name}</td>\n            <td className=\"align-middle text-center\">{date}</td>\n            <td className=\"align-middle text-center\">\n              <Progress value={progress} style={{ height: 5 }} />\n            </td>\n            <td className=\"align-middle text-center\">{progress}%</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nUserProgressTable.propTypes = {\n  headers: PropTypes.node,\n  usersData: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string,\n      name: PropTypes.string,\n      date: PropTypes.date,\n    })\n  ),\n};\n\nUserProgressTable.defaultProps = {\n  headers: [],\n  usersData: [],\n};\n\nexport default UserProgressTable;\n","import product1Image from 'assets/img/products/product_640-1.jpg';\nimport product2Image from 'assets/img/products/product_640-2.jpg';\nimport product3Image from 'assets/img/products/product_640-3.jpg';\nimport product4Image from 'assets/img/products/product_640-4.jpg';\nimport product5Image from 'assets/img/products/product_640-5.jpg';\nimport product6Image from 'assets/img/products/product_640-6.jpg';\n\nimport user1Image from 'assets/img/users/100_1.jpg';\nimport user2Image from 'assets/img/users/100_2.jpg';\nimport user3Image from 'assets/img/users/100_3.jpg';\nimport user4Image from 'assets/img/users/100_4.jpg';\nimport user5Image from 'assets/img/users/100_5.jpg';\nimport user6Image from 'assets/img/users/100_6.jpg';\nimport user7Image from 'assets/img/users/100_7.jpg';\nimport user8Image from 'assets/img/users/100_8.jpg';\nimport user9Image from 'assets/img/users/100_9.jpg';\nimport user10Image from 'assets/img/users/100_10.jpg';\nimport user11Image from 'assets/img/users/100_11.jpg';\nimport user12Image from 'assets/img/users/100_12.jpg';\nimport user13Image from 'assets/img/users/100_13.jpg';\nimport user14Image from 'assets/img/users/100_14.jpg';\n\nexport const productsData = [\n  {\n    id: 1,\n    image: product1Image,\n    title: 'Admin Template',\n    description: 'Responsive admin template...',\n    right: '$36',\n  },\n  {\n    id: 2,\n    image: product2Image,\n    title: 'Schedule App',\n    description: 'Manage your schedule...',\n    right: '$9',\n  },\n  {\n    id: 3,\n    image: product3Image,\n    title: 'Chat App',\n    description: 'Realtime chat application...',\n    right: '$12',\n  },\n  {\n    id: 4,\n    image: product4Image,\n    title: 'Wordpress Business Theme',\n    description: 'Over 100+ templates and pages...',\n    right: '$24',\n  },\n  {\n    id: 5,\n    image: product5Image,\n    title: 'Camera App',\n    description: 'Over 30+ filter...',\n    right: '$6.99',\n  },\n  {\n    id: 6,\n    image: product6Image,\n    title: 'Calendar App',\n    description: 'Organize your schedule...',\n    right: '$0.99',\n  },\n];\n\nexport const avatarsData = [\n  {\n    avatar: user1Image,\n    name: 'Tom',\n    date: '3 month ago',\n  },\n  {\n    avatar: user2Image,\n    name: 'Jenny',\n    date: '1 year ago',\n  },\n  {\n    avatar: user3Image,\n    name: 'Sim',\n    date: '2 hour ago',\n  },\n  {\n    avatar: user4Image,\n    name: 'Christine',\n    date: 'a month ago',\n  },\n  {\n    avatar: user5Image,\n    name: 'Bread',\n    date: '6 months ago',\n  },\n  {\n    avatar: user6Image,\n    name: 'Dan',\n    date: '2 years ago',\n  },\n  {\n    avatar: user7Image,\n    name: 'Merry',\n    date: '3 month ago',\n  },\n  {\n    avatar: user8Image,\n    name: 'John',\n    date: '1 month ago',\n  },\n  {\n    avatar: user9Image,\n    name: 'Shane',\n    date: '7 month ago',\n  },\n  {\n    avatar: user10Image,\n    name: 'Star',\n    date: '1 year ago',\n  },\n  {\n    avatar: user11Image,\n    name: 'Jenny',\n    date: '3 month ago',\n  },\n  {\n    avatar: user12Image,\n    name: 'Park',\n    date: '4 month ago',\n  },\n  {\n    avatar: user13Image,\n    name: 'Dave',\n    date: '9 month ago',\n  },\n  {\n    avatar: user14Image,\n    name: 'Jackson',\n    date: '10 month ago',\n  },\n];\n\nexport const userProgressTableData = [\n  {\n    avatar: user1Image,\n    name: 'Tom',\n    date: '3 month ago',\n    progress: 75,\n  },\n  {\n    avatar: user2Image,\n    name: 'Jenny',\n    date: '1 year ago',\n    progress: 60,\n  },\n  {\n    avatar: user3Image,\n    name: 'Sim',\n    date: '2 hour ago',\n    progress: 50,\n  },\n  {\n    avatar: user4Image,\n    name: 'Christine',\n    date: 'a month ago',\n    progress: 40,\n  },\n  {\n    avatar: user5Image,\n    name: 'Bread',\n    date: '6 months ago',\n    progress: 30,\n  },\n  {\n    avatar: user6Image,\n    name: 'Dan',\n    date: '2 years ago',\n    progress: 25,\n  },\n];\n\nexport const supportTicketsData = [\n  {\n    id: 1,\n    avatar: user1Image,\n    name: 'Sim',\n    date: '30 mins ago',\n    text:\n      'Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy nibh euismod tinciduntut laoreet doloremagna aliquam erat volutpat.',\n    status: 'pending',\n  },\n  {\n    id: 2,\n    avatar: user2Image,\n    name: 'Jane',\n    date: '1 hour ago',\n    text:\n      'Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy nibh euismod tinciduntut laoreet doloremagna aliquam erat volutpat.',\n    status: 'open',\n  },\n  {\n    id: 3,\n    avatar: user3Image,\n    name: 'Tom',\n    date: 'yesterday',\n    text:\n      'Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy nibh euismod tinciduntut laoreet doloremagna aliquam erat volutpat.',\n    status: 'closed',\n  },\n];\n\nexport const todosData = [\n  { id: 1, title: 'task -1', done: true },\n  { id: 2, title: 'task -2', done: false },\n  { id: 3, title: 'task -3', done: true },\n  { id: 4, title: 'task -4', done: true },\n  { id: 5, title: 'task -5', done: false },\n];\n\nexport const chartjs = {\n  bar: {\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [\n        {\n          label: 'Expense for this year',\n          backgroundColor: '#6a82fb',\n          stack: 'Expense',\n          data: [10000, 30000, 50000, 80000, 60000, 20000, 10000],\n        },\n        {\n          label: 'Expense for last year',\n          backgroundColor: '#fc5c7d',\n          stack: 'Expense',\n          data: [30000, 80000, 50000, 100000, 60000, 40000, 90000],\n        },\n      ],\n    },\n    options: {\n      title: {\n        display: false,\n        text: 'Chart.js Bar Chart - Stacked',\n      },\n      tooltips: {\n        mode: 'index',\n        intersect: false,\n      },\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      scales: {\n        xAxes: [\n          {\n            stacked: true,\n            display: false,\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            display: false,\n          },\n        ],\n      },\n    },\n  },\n  doughnut: {\n    data: {\n      datasets: [\n        {\n          data: [20, 30, 40, 50, 60],\n          backgroundColor: [\n            '#6a82fb',\n            '#fc5c7d',\n            '#45b649',\n            '#00c9ff',\n            '#ffd700',\n          ],\n          label: 'Dataset 1',\n        },\n      ],\n      labels: ['Red', 'Orange', 'Yellow', 'Green', 'Blue'],\n    },\n    options: {\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      title: {\n        display: false,\n        text: 'Chart.js Doughnut Chart',\n      },\n      animation: {\n        animateScale: true,\n        animateRotate: true,\n      },\n    },\n  },\n  line: {\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [\n        {\n          label: 'Revenue for this year',\n          borderColor: '#6a82fb',\n          backgroundColor: '#6a82fb',\n          data: [0, 1300, 2200, 3400, 4600, 3500, 3000],\n        },\n\n        {\n          label: 'Revenue for last year',\n          borderColor: '#fc5c7d',\n          backgroundColor: '#fc5c7d',\n          data: [0, 1300, 2200, 3400, 4600, 3500, 3000],\n        },\n      ],\n    },\n    options: {\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      title: {\n        display: false,\n        text: 'Chart.js Line Chart - Stacked Area',\n      },\n      tooltips: {\n        intersect: false,\n        mode: 'nearest',\n      },\n      hover: {\n        mode: 'index',\n      },\n      scales: {\n        xAxes: [\n          {\n            scaleLabel: {\n              display: false,\n              labelString: 'Month',\n            },\n            gridLines: {\n              display: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            scaleLabel: {\n              display: false,\n              labelString: 'Value',\n            },\n            gridLines: {\n              display: false,\n            },\n          },\n        ],\n      },\n    },\n  },\n};\n","import React from 'react'\nimport \"@material-tailwind/react/tailwind.css\";\n\nimport Card from \"@material-tailwind/react/Card\";\nimport CardRow from \"@material-tailwind/react/CardRow\";\nimport CardHeader from \"@material-tailwind/react/CardHeader\";\nimport CardStatus from \"@material-tailwind/react/CardStatus\";\nimport CardStatusFooter from \"@material-tailwind/react/CardStatusFooter\";\nimport Icon from \"@material-tailwind/react/Icon\";\nimport { Col, Row, ListGroup, ListGroupItem, Badge } from 'reactstrap';\n\nconst TailwindCard = ({ title, subscribers, image, color, link, viewCountMillions, addedViewCountMillions }) => {\n    return (\n        <>\n            <Card className=\"m-2\">\n                <CardRow>\n                    <CardHeader size=\"lg\" iconOnly>\n                        <img alt=\"image text\" color={color} src={image} />\n                    </CardHeader>\n                    <CardStatus title={title} amount={subscribers} />\n                </CardRow>\n                <ListGroup flush id=\"e-list-style-none\">\n                    <ListGroupItem className=\"d-flex justify-content-between\">\n                        <span> Views {' '}</span>\n                        <Badge style={{ lineHeight: '1.5' }} color=\"secondary\">{viewCountMillions}</Badge>\n                    </ListGroupItem>\n                </ListGroup>\n                <Row>\n                    <Col lg={9} md={9} sm={9} xs={9}>\n                        <span className=\"text-sm text-gray-700 pt-4 items-center flex\">\n                            <span class=\"material-icons text-green-500 text-base leading-none\">arrow_upward</span><span class=\"text-green-500 ml-1 mr-2\">{addedViewCountMillions}</span><span class=\"font-light whitespace-nowrap\">Since last week</span>\n                        </span>\n                    </Col>\n                    <Col lg={3} md={3} sm={3} xs={3}>\n                        <button onClick={() => window.open(link)}\n                            class=\"bg-purple-500 text-white active:bg-purple-600 font-bold\n    uppercase text-xs px-3 py-1 rounded-full shadow hover:shadow-md outline-none\n    focus:outline-none mt-4 ease-linear transition-all duration-150\" type=\"button\"\n                        > Link</button>\n                    </Col>\n\n                </Row>\n            </Card>\n        </>\n    )\n}\n\nexport default TailwindCard\n","import React, { useEffect, useState } from 'react'\nimport {\n    Card, CardHeader, CardText, CardBody, CardFooter, Button, Row, Col,\n    CardTitle, CardSubtitle, CardImg\n} from 'reactstrap';\nimport Carousel from 'react-elastic-carousel'\nimport { getSonyLiv, getNetflix,getNetflixIndia,getAmazonPrime,getAmazonIndia,getZee,getAha,getMxplayer  } from '../services/appService';\nimport Popup from './Popup';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport ReactPlayer from 'react-player';\n\nconst OwlCarouselSlider = ({ name }) => {\n    const [details, setDetails] = useState([]);\n    const breakPoints = [\n        { width: 1, itemsToShow: 1 },\n        { width: 550, itemsToShow: 2, itemsToScroll: 2, pagination: false },\n        { width: 850, itemsToShow: 3 },\n        { width: 1150, itemsToShow: 4, itemsToScroll: 2 },\n        { width: 1450, itemsToShow: 5 },\n        { width: 1750, itemsToShow: 6 },\n    ]\n    useEffect(() => {\n        console.log(name);\n        switch (name) {\n            case 'sonyliv': getSonyLiv().then(res => {\n                setDetails(res.data);\n            }); break;\n            case 'Netflix': getNetflix().then(res => {\n                setDetails(res.data);\n            }); break;\n            case 'netflix_india': getNetflixIndia().then(res => {\n                setDetails(res.data);\n            }); break;\n            case 'amazon_prime': getAmazonPrime().then(res => {\n                setDetails(res.data);\n            }); break;\n            case 'amazon_india': getAmazonIndia().then(res => {\n                setDetails(res.data);\n            }); break;\n            case 'zee5': getZee().then(res => {\n                setDetails(res.data);\n            }); break;\n            case 'aha': getAha().then(res => {\n                setDetails(res.data);\n            }); break;\n            case 'mx_player': getMxplayer().then(res => {\n                setDetails(res.data);\n            }); break;\n        }\n    }, []);\n\n    const [isOpen, setOpen] = useState(false);\n    const [imageUrl,setUrl] = useState('');\n    const [modalData,setModalData] = useState({});\n    const openModal = (modalData) => {\n        // history.push()\n        console.log(modalData);\n        if(isOpen) {\n\n        } else {\n            setOpen(!isOpen);\n            setModalData({title: modalData.title, url: modalData.url});\n        }\n    }\n    const noRefCheck = () => {\n        console.log('hello');\n        setOpen(!isOpen);\n    }\n    return (\n        <>\n            <Carousel itemsToShow={4} breakPoints={breakPoints}>\n                {details && details.map(d => (\n                    <Card onClick={() => openModal(d)}>\n                        <CardImg className=\"can-click\" top width=\"100%\" src={d.thumbnail} alt=\"Card image cap\" />\n                        <CardBody>\n                            <CardTitle><strong>{d.plTitle}</strong></CardTitle>\n                            <CardText>{d.title}</CardText>\n                        </CardBody>\n                    </Card>\n                ))}\n            </Carousel>\n            <Modal\n                isOpen={isOpen}\n                scrollable={false} \n                keyboard={true} toggle={() => setOpen(!isOpen)}>\n                <ModalHeader toggle={() => setOpen(!isOpen)}>\n                    {modalData.title}\n                </ModalHeader>\n                <ModalBody>\n                    <div className='player-wrapper'>\n                        <ReactPlayer className='react-player'\n                            width='100%'\n                            height='100%' controls={true} playing= {true} url={modalData.url} />\n                    </div>\n                </ModalBody>\n                {/* <ModalFooter>\n                    <Button\n                        color=\"primary\"\n                        onClick={() => noRefCheck()}\n                    >\n                        Do Something\n                    </Button>\n                    {' '}\n                    <Button onClick={() => noRefCheck()}>\n                        Cancel\n                    </Button>\n                </ModalFooter> */}\n            </Modal>\n        </>\n    )\n}\n\nexport default OwlCarouselSlider\n","import { AnnouncementCard, TodosCard } from 'components/Card';\nimport HorizontalAvatarList from 'components/HorizontalAvatarList';\nimport MapWithBubbles from 'components/MapWithBubbles';\nimport Page from 'components/Page';\nimport ProductMedia from 'components/ProductMedia';\nimport SupportTicket from 'components/SupportTicket';\nimport UserProgressTable from 'components/UserProgressTable';\nimport { IconWidget, NumberWidget } from 'components/Widget';\nimport { getStackLineChart, stackLineChartOptions } from 'demos/chartjs';\nimport {\n  avatarsData,\n  chartjs,\n  productsData,\n  supportTicketsData,\n  todosData,\n  userProgressTableData,\n} from 'demos/dashboardPage';\nimport React from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport {\n  MdBubbleChart,\n  MdInsertChart,\n  MdPersonPin,\n  MdPieChart,\n  MdRateReview,\n  MdShare,\n  MdShowChart,\n  MdThumbUp,\n} from 'react-icons/md';\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport {\n  Badge,\n  Button,\n  Card,\n  CardBody,\n  CardDeck,\n  CardGroup,\n  CardHeader,\n  CardTitle,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  Row,\n} from 'reactstrap';\nimport { getColor } from 'utils/colors';\n///// added code for tailwind\nimport TailwindCard from './TailwindCard';\nimport {getProductDetails} from '../services/appService';\n\nimport OwlCarouselSlider from './OwlCarouselSlider.js';\nimport Typography from '../components/Typography';\n\nconst today = new Date();\nconst lastWeek = new Date(\n  today.getFullYear(),\n  today.getMonth(),\n  today.getDate() - 7,\n);\n\nclass DashboardPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Set initial state (ONLY ALLOWED IN CONSTRUCTOR)\n    this.state = {\n      cardData: []\n    };\n  }\n  componentDidMount() {\n    // this is needed, because InfiniteCalendar forces window scroll\n    window.scrollTo(0, 0);\n    getProductDetails().then(res => {\n      console.log(res.data);\n      this.setState({ cardData: res.data });\n    });\n  }\n\n  render() {\n    const primaryColor = getColor('primary');\n    const secondaryColor = getColor('secondary');\n\n    return (\n      <Page\n        className=\"DashboardPage\"\n        title=\"Dashboard\"\n        breadcrumbs={[{ name: 'Dashboard', active: true }]}\n      >\n        <Row className=\"my-3\">\n          {this.state.cardData.map((c) => (\n            <Col lg={3} md={6} sm={6} xs={12} key={c.index}>\n              <TailwindCard title={c.name} subscribers={c.subscriberCountMillions}\n                image={c.img}\n                color={'#c6ece5'} link={`https://www.youtube.com/channel/${c.id}`}\n                viewCountMillions={c.viewCountMillions} addedViewCountMillions={c.added_viewCountMillions} />\n            </Col>\n          ))}\n        </Row>\n        <Typography type=\"h4\">Netflix Channel</Typography>\n        <OwlCarouselSlider name=\"Netflix\"></OwlCarouselSlider>\n        <Typography type=\"h4\">Netflix India Channel</Typography>\n        <OwlCarouselSlider name=\"netflix_india\"></OwlCarouselSlider>\n        <Typography type=\"h4\">Amazon Prime Channel</Typography>\n        <OwlCarouselSlider name=\"amazon_prime\"></OwlCarouselSlider>\n        <Typography type=\"h4\">Amazon India Channel</Typography>\n        <OwlCarouselSlider name=\"amazon_india\"></OwlCarouselSlider>\n        <Typography type=\"h4\">SonyLIV Channel</Typography>\n        <OwlCarouselSlider name=\"sonyliv\"></OwlCarouselSlider>\n        <Typography type=\"h4\">Zee5 Channel</Typography>\n        <OwlCarouselSlider name=\"zee5\"></OwlCarouselSlider>\n        <Typography type=\"h4\">Aha Channel</Typography>\n        <OwlCarouselSlider name=\"aha\"></OwlCarouselSlider>\n        <Typography type=\"h4\">MX Player Channel</Typography>\n        <OwlCarouselSlider name=\"mx_player\"></OwlCarouselSlider>\n        \n\n        {/* <Row className=\"my-3\">\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Total Profit\"\n              subtitle=\"This month\"\n              number=\"9.8k\"\n              color=\"secondary\"\n              progress={{\n                value: 75,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Monthly Visitors\"\n              subtitle=\"This month\"\n              number=\"5,400\"\n              color=\"secondary\"\n              progress={{\n                value: 45,\n                label: 'Last month',\n              }}\n            />\n\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"New Users\"\n              subtitle=\"This month\"\n              number=\"3,400\"\n              color=\"secondary\"\n              progress={{\n                value: 90,\n                label: 'Last month',\n              }}\n            />\n\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Bounce Rate\"\n              subtitle=\"This month\"\n              number=\"38%\"\n              color=\"secondary\"\n              progress={{\n                value: 60,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg=\"8\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>\n                Total Revenue{' '}\n                <small className=\"text-muted text-capitalize\">This year</small>\n              </CardHeader>\n              <CardBody>\n                <Line data={chartjs.line.data} options={chartjs.line.options} />\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>Total Expense</CardHeader>\n              <CardBody>\n                <Bar data={chartjs.bar.data} options={chartjs.bar.options} />\n              </CardBody>\n              <ListGroup flush>\n                <ListGroupItem>\n                  <MdInsertChart size={25} color={primaryColor} /> Cost of sales{' '}\n                  <Badge color=\"secondary\">$3000</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdBubbleChart size={25} color={primaryColor} /> Management\n                  costs <Badge color=\"secondary\">$1200</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdShowChart size={25} color={primaryColor} /> Financial costs{' '}\n                  <Badge color=\"secondary\">$800</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdPieChart size={25} color={primaryColor} /> Other operating\n                  costs <Badge color=\"secondary\">$2400</Badge>\n                </ListGroupItem>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n\n        <CardGroup style={{ marginBottom: '1rem' }}>\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdThumbUp}\n            title=\"50+ Likes\"\n            subtitle=\"People you like\"\n          />\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdRateReview}\n            title=\"10+ Reviews\"\n            subtitle=\"New Reviews\"\n          />\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdShare}\n            title=\"30+ Shares\"\n            subtitle=\"New Shares\"\n          />\n        </CardGroup>\n\n        <Row>\n          <Col md=\"6\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>New Products</CardHeader>\n              <CardBody>\n                {productsData.map(\n                  ({ id, image, title, description, right }) => (\n                    <ProductMedia\n                      key={id}\n                      image={image}\n                      title={title}\n                      description={description}\n                      right={right}\n                    />\n                  ),\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col md=\"6\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>New Users</CardHeader>\n              <CardBody>\n                <UserProgressTable\n                  headers={[\n                    <MdPersonPin size={25} />,\n                    'name',\n                    'date',\n                    'participation',\n                    '%',\n                  ]}\n                  usersData={userProgressTableData}\n                />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [0, 13000, 5000, 24000, 16000, 25000, 10000],\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute' }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Sales\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [10000, 15000, 5000, 10000, 5000, 10000, 10000],\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute' }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Revenue\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [0, 13000, 5000, 24000, 16000, 25000, 10000].reverse(),\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute', right: 0 }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Profit\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <InfiniteCalendar\n              selected={today}\n              minDate={lastWeek}\n              width=\"100%\"\n              theme={{\n                accentColor: primaryColor,\n                floatingNav: {\n                  background: secondaryColor,\n                  chevron: primaryColor,\n                  color: '#FFF',\n                },\n                headerColor: primaryColor,\n                selectionColor: secondaryColor,\n                textColor: {\n                  active: '#FFF',\n                  default: '#333',\n                },\n                todayColor: secondaryColor,\n                weekdayColor: primaryColor,\n              }}\n            />\n          </Col>\n\n          <Col lg=\"8\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card inverse className=\"bg-gradient-primary\">\n              <CardHeader className=\"bg-gradient-primary\">\n                Map with bubbles\n              </CardHeader>\n              <CardBody>\n                <MapWithBubbles />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <CardDeck style={{ marginBottom: '1rem' }}>\n          <Card body style={{ overflowX: 'auto', 'paddingBottom': '15px', 'height': 'fit-content', 'paddingTop': 'inherit' }}>\n            <HorizontalAvatarList\n              avatars={avatarsData}\n              avatarProps={{ size: 50 }}\n            />\n          </Card>\n\n          <Card body style={{ overflowX: 'auto', 'paddingBottom': '15px', 'height': 'fit-content', 'paddingTop': 'inherit' }}>\n            <HorizontalAvatarList\n              avatars={avatarsData}\n              avatarProps={{ size: 50 }}\n              reversed\n            />\n          </Card>\n        </CardDeck>\n\n        <Row>\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <AnnouncementCard\n              color=\"gradient-secondary\"\n              header=\"Announcement\"\n              avatarSize={60}\n              name=\"Jamy\"\n              date=\"1 hour ago\"\n              text=\"Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy euismod tinciduntut laoreet doloremagna\"\n              buttonProps={{\n                children: 'show',\n              }}\n              style={{ height: 500 }}\n            />\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>\n                <div className=\"d-flex justify-content-between align-items-center\">\n                  <span>Support Tickets</span>\n                  <Button>\n                    <small>View All</small>\n                  </Button>\n                </div>\n              </CardHeader>\n              <CardBody>\n                {supportTicketsData.map(supportTicket => (\n                  <SupportTicket key={supportTicket.id} {...supportTicket} />\n                ))}\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <TodosCard todos={todosData} />\n          </Col>\n        </Row> */}\n      </Page>\n    );\n  }\n}\nexport default DashboardPage;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\n\nexport const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n","import ChartJS from 'chart.js';\nimport { getColor } from 'utils/colors';\n\nexport const getStackLineChart = ({ labels, data }) => canvas => {\n  const ctx = canvas.getContext('2d');\n  let gradient = ctx.createLinearGradient(0, 0, 0, 240);\n  gradient.addColorStop(\n    0,\n    ChartJS.helpers\n      .color('#00c9ff')\n      .alpha(1)\n      .rgbString()\n  );\n  gradient.addColorStop(\n    1,\n    ChartJS.helpers\n      .color('#00c9ff')\n      .alpha(0.2)\n      .rgbString()\n  );\n\n  return {\n    labels,\n    datasets: [\n      {\n        data,\n        label: 'My First dataset',\n        borderColor: getColor('primary'),\n        backgroundColor: gradient,\n        fill: 'origin',\n      },\n    ],\n  };\n};\n\nexport const stackLineChartOptions = {\n  tooltips: {\n    intersect: false,\n  },\n  animation: {\n    duration: 0,\n  },\n  scales: {\n    xAxes: [\n      {\n        display: false,\n      },\n    ],\n    yAxes: [{ display: false }],\n  },\n  legend: {\n    display: false,\n  },\n  // elements: {\n  //   line: {\n  //     tension: 0, // disables bezier curves\n  //   },\n  // },\n};\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Card, CardText, CardTitle, Progress } from 'reactstrap';\nimport Typography from '../Typography';\n\nconst NumberWidget = ({\n  title,\n  subtitle,\n  number,\n  color,\n  progress: { value, label },\n  ...restProps\n}) => {\n  return (\n    <Card body {...restProps}>\n      <div className=\"d-flex justify-content-between\">\n        <CardText tag=\"div\">\n          <Typography className=\"mb-0\">\n            <strong>{title}</strong>\n          </Typography>\n          <Typography className=\"mb-0 text-muted small\">{subtitle}</Typography>\n        </CardText>\n        <CardTitle className={`text-${color}`}>{number}</CardTitle>\n      </div>\n      <Progress value={value} color={color} style={{ height: '8px' }} />\n      <CardText tag=\"div\" className=\"d-flex justify-content-between\">\n        <Typography tag=\"span\" className=\"text-left text-muted small\">\n          {label}\n        </Typography>\n        <Typography tag=\"span\" className=\"text-right text-muted small\">\n          {value}%\n        </Typography>\n      </CardText>\n    </Card>\n  );\n};\n\nNumberWidget.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  number: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.number.isRequired,\n  ]),\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'info',\n    'warning',\n    'danger',\n    'light',\n    'dark',\n  ]),\n  progress: PropTypes.shape({\n    value: PropTypes.number,\n    label: PropTypes.string,\n  }),\n};\n\nNumberWidget.defaultProps = {\n  title: '',\n  subtitle: '',\n  number: 0,\n  color: 'primary',\n  progress: {\n    value: 0,\n    label: '',\n  },\n};\n\nexport default NumberWidget;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport classNames from 'classnames';\n\nimport { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\n\nconst IconWidget = ({\n  bgColor,\n  icon: Icon,\n  iconProps,\n  title,\n  subtitle,\n  className,\n  ...restProps\n}) => {\n  const classes = classNames('cr-widget', className, {\n    [`bg-${bgColor}`]: bgColor,\n  });\n  return (\n    <Card inverse className={classes} {...restProps}>\n      <CardBody className=\"cr-widget__icon\">\n        <Icon size={50} {...iconProps} />\n      </CardBody>\n      <CardBody>\n        <CardTitle>{title}</CardTitle>\n        <CardSubtitle>{subtitle}</CardSubtitle>\n      </CardBody>\n    </Card>\n  );\n};\n\nIconWidget.propTypes = {\n  bgColor: PropTypes.string,\n  icon: PropTypes.component,\n  iconProps: PropTypes.object,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n};\n\nIconWidget.defaultProps = {\n  bgColor: 'primary',\n  icon: 'span',\n  iconProps: { size: 50 },\n};\n\nexport default IconWidget;\n","export { default as NumberWidget } from './NumberWidget';\nexport { default as IconWidget } from './IconWidget';\n","module.exports = __webpack_public_path__ + \"static/media/product_640-1.a9a0ec64.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-2.da0b0457.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-3.64ed27c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-4.2110d8cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-5.bf8840bd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-6.f9249755.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_6.de882536.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_7.1dce100f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_8.a4be0bbf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_9.798c02eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_10.56d054ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_11.336faadc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_12.1e0889af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_13.63265e92.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_14.595b8cbd.jpg\";"],"sourceRoot":""}