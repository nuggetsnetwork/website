{"version":3,"sources":["pages/NetflixPage.js","components/Typography.js","components/Page.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime-module.js","../node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"names":["NetflixPage","_useState","useState","_useState2","Object","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","movie","setMovie","_useState3","_useState4","_useState5","_useState6","getMovieData","_ref","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","data","wrap","_context","prev","next","axios","get","sent","console","log","t0","stop","apply","this","arguments","columns","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","title","field","headerStyle","width","cellStyle","backgroundColor","color","fontSize","render","rowData","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","Fragment","href","url","target","style","textDecoration","className","height","class","src","thumbnail","useEffect","components_Page__WEBPACK_IMPORTED_MODULE_4__","breadcrumbs","name","active","padding","border","material_table__WEBPACK_IMPORTED_MODULE_7___default","options","filtering","filterCellStyle","paging","pageSize","pageSizeOptions","exportButton","search","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","TypoComp","Tag","tag","type","restProps","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","react__WEBPACK_IMPORTED_MODULE_3___default","assign","defaultProps","bem","bn","create","Page","children","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","key","module","exports","__webpack_require__","g","self","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","undefined","global","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","then","result","done","value","toString","keys","object","push","reverse","pop","Context","reset","skipTempReset","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","i","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","obj","err","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","unwrapped","error","return","TypeError","info","pushTryEntry","locs","iteratorMethod","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","d","__webpack_exports__"],"mappings":"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","file":"static/js/20.7e167d1a.chunk.js","sourcesContent":["import Page from 'components/Page';\nimport React from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, Table } from 'reactstrap';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport MaterialTable from 'material-table';\n// import { withStyles, makeStyles } from \"@material-ui/core/styles\";\n\nconst tableTypes = ['', 'bordered', 'striped', 'hover'];\n\nconst NetflixPage = () => {\n    // const classes = useStyles();\n    const [movie, setMovie] = useState([]);\n    const [search, setSearch] = useState(\"\");\n    const [searchmonth, setSearchmonth] = useState(\"\");\n  \n    const getMovieData = async () => {\n      try {\n        const data = await axios.get(\n          \"https://nuggetsnetwork.com/Products/Netflix.json\"\n          // \"http://makeup-api.herokuapp.com/api/v1/products.json?brand=maybelline\"\n        );\n        console.log(data.data);\n        setMovie(data.data);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    \n    const columns=[\n        {\n            title:'Movie Name',field:'title',headerStyle: {width: '350px'},\n            cellStyle:{\n                backgroundColor: '#039be5',\n                color:'#FFF'\n            },\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:20\n              }\n        },\n        {\n            title:'Month',field:'plTitle',headerStyle: {width: '350px'},\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:20\n              }\n        },\n        {\n            title:'Views',field:'views',headerStyle: {width: '350px'},\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:20,\n              }\n        },\n        // {\n        //     title:'Likes',field:'likes',headerStyle: {width: '500px'},\n        //     headerStyle: {\n        //         backgroundColor: '#039be5',\n        //         color:'#FFF',\n        //         fontSize:20\n        //       }\n        // },\n        {\n            title:'IMDB',field:'averageRating',headerStyle: {width: '350px'},\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:20\n              }\n        },\n        {\n          title: 'Link', field: 'url',\n          headerStyle: {\n            backgroundColor: '#039be5',\n            color: '#FFF',\n          },\n    \n          render: (rowData) => (\n            <>\n              <a\n                href={rowData.url}\n                target=\"_blank\"\n                style={{ textDecoration: 'none' }}\n              >\n                <div className=\"text-center\">\n                  <img width=\"100px\" height=\"100px\" class=\"rounded mr-2 mb-2 media-object\" src={rowData.thumbnail} />\n                </div>\n              </a>\n            </>\n          ),\n    \n        }\n        \n    ]\n\n    useEffect(() => {\n      getMovieData();\n    }, []);\n  return (\n    <Page\n      title=\"NetFlix\"\n      breadcrumbs={[{ name: 'netflix', active: true }]}\n      className=\"NetflixPage\"\n    >\n    <fieldset style={{padding: '0px', border: 'none'}}>\n    <MaterialTable title=\"Movie Trailers Tracker\"\n        data={movie}\n        columns={columns}\n        options={{\n            filtering:true,\n            filterCellStyle:{\n                backgroundColor: '#A9E3FF',\n                color:'#FFF'\n            },\n            paging:true,\n            pageSize:10,\n            pageSizeOptions: [25, 50, 100, 250],\n            exportButton:false,\n            search:false\n        }}\n        /></fieldset>\n    </Page>\n    \n  );\n};\n\nexport default NetflixPage;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = function () {\n  return this || typeof self === \"object\" && self;\n}() || Function(\"return this\")(); // Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\n\n\nvar hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0; // Save the old regeneratorRuntime in case it needs to be restored later.\n\nvar oldRuntime = hadRuntime && g.regeneratorRuntime; // Force reevalutation of runtime.js.\n\ng.regeneratorRuntime = undefined;\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch (e) {\n    g.regeneratorRuntime = undefined;\n  }\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n!function (global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    } // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n\n\n    return;\n  } // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n\n\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  runtime.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  runtime.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  runtime.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  runtime.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  runtime.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return runtime.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  runtime.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n}( // In sloppy mode, unbound `this` refers to the global object, fallback to\n// Function constructor if we're in global strict mode. That is sadly a form\n// of indirect eval which violates Content Security Policy.\nfunction () {\n  return this || typeof self === \"object\" && self;\n}() || Function(\"return this\")());","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"sourceRoot":""}