{"version":3,"sources":["pages/NewTablePage.js","components/Typography.js","components/Page.js"],"names":["NewTablePage","_useState","useState","_useState2","Object","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","movie","setMovie","_useState3","_useState4","_useState5","_useState6","getMovieData","_ref","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","data","wrap","_context","prev","next","axios","get","sent","console","log","t0","stop","apply","this","arguments","useEffect","react__WEBPACK_IMPORTED_MODULE_4___default","createElement","components_Page__WEBPACK_IMPORTED_MODULE_3__","title","breadcrumbs","name","active","className","material_table__WEBPACK_IMPORTED_MODULE_6___default","columns","field","cellStyle","backgroundColor","color","headerStyle","fontSize","defaultSort","options","filtering","filterCellStyle","paging","pageSize","pageSizeOptions","exportButton","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","TypoComp","Tag","tag","type","restProps","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","assign","defaultProps","bem","bn","create","Page","children","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","key"],"mappings":"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","file":"static/js/31.7ede7b5f.chunk.js","sourcesContent":["import Page from 'components/Page';\nimport React from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, Table } from 'reactstrap';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport MaterialTable from 'material-table';\n// import { withStyles, makeStyles } from \"@material-ui/core/styles\";\n\nconst tableTypes = ['', 'bordered', 'striped', 'hover'];\n\nconst NewTablePage = () => {\n    // const classes = useStyles();\n    const [movie, setMovie] = useState([]);\n    const [search, setSearch] = useState(\"\");\n    const [searchmonth, setSearchmonth] = useState(\"\");\n  \n    const getMovieData = async () => {\n      try {\n        const data = await axios.get(\n          \"https://nuggetsnetwork.com/Products/Netflix.json\"\n          // \"http://makeup-api.herokuapp.com/api/v1/products.json?brand=maybelline\"\n        );\n        console.log(data.data);\n        setMovie(data.data);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    \n    const columns=[\n        {\n            title:'Movie Name',field:'fTitle',\n            cellStyle:{\n                backgroundColor: '#039be5',\n                color:'#FFF'\n            },\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:25\n              }\n        },\n        {\n            title:'Month',field:'plTitle',\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:25\n              }\n        },\n        {\n            title:'Views',field:'views', defaultSort:'desc',\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:25,\n              }\n        },\n        {\n            title:'Likes',field:'likes',\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:25\n              }\n        },\n        {\n            title:'IMDB Rating',field:'averageRating',\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:25\n              }\n        }\n    ]\n\n    useEffect(() => {\n      getMovieData();\n    }, []);\n  return (\n    <Page\n      title=\"NetFlix\"\n      breadcrumbs={[{ name: 'netflix', active: true }]}\n      className=\"NewTablePage\"\n    >\n    \n    <MaterialTable title=\"Movie Trailers Tracker\"\n        data={movie}\n        columns={columns}\n        options={{\n            filtering:true,\n            filterCellStyle:{\n                backgroundColor: '#A9E3FF',\n                color:'#FFF'\n            },\n            paging:true,\n            pageSize:10,\n            pageSizeOptions: [25, 50, 100, 250],\n            exportButton:true\n        }}\n        />\n     \n      {/* {tableTypes.map((tableType, index) => (\n        <Row key={index}>\n          <Col>\n            <Card className=\"mb-3\">\n              <CardHeader>{tableType || 'default'}</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col>\n                    <Card body>\n                      <Table {...{ [tableType || 'default']: true }}>\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n                            <th scope=\"row\">1</th>\n                            <td>Mark</td>\n                            <td>Otto</td>\n                            <td>@mdo</td>\n                          </tr>\n                          <tr>\n                            <th scope=\"row\">2</th>\n                            <td>Jacob</td>\n                            <td>Thornton</td>\n                            <td>@fat</td>\n                          </tr>\n                          <tr>\n                            <th scope=\"row\">3</th>\n                            <td>Larry</td>\n                            <td>the Bird</td>\n                            <td>@twitter</td>\n                          </tr>\n                        </tbody>\n                      </Table>\n                    </Card>\n                  </Col>\n\n                  <Col>\n                    <Card body>\n                      <Table dark>\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n                            <th scope=\"row\">1</th>\n                            <td>Mark</td>\n                            <td>Otto</td>\n                            <td>@mdo</td>\n                          </tr>\n                          <tr>\n                            <th scope=\"row\">2</th>\n                            <td>Jacob</td>\n                            <td>Thornton</td>\n                            <td>@fat</td>\n                          </tr>\n                          <tr>\n                            <th scope=\"row\">3</th>\n                            <td>Larry</td>\n                            <td>the Bird</td>\n                            <td>@twitter</td>\n                          </tr>\n                        </tbody>\n                      </Table>\n                    </Card>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      ))}\n\n      <Row>\n        <Col>\n          <Card className=\"mb-3\">\n            <CardHeader>Contextual</CardHeader>\n            <CardBody>\n              <Table>\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Type</th>\n                    <th scope=\"col\">Column heading</th>\n                    <th scope=\"col\">Column heading</th>\n                    <th scope=\"col\">Column heading</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr className=\"table-active\">\n                    <th scope=\"row\">Active</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Default</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n\n                  <tr className=\"table-primary\">\n                    <th scope=\"row\">Primary</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-secondary\">\n                    <th scope=\"row\">Secondary</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-success\">\n                    <th scope=\"row\">Success</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-danger\">\n                    <th scope=\"row\">Danger</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-warning\">\n                    <th scope=\"row\">Warning</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-info\">\n                    <th scope=\"row\">Info</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-light\">\n                    <th scope=\"row\">Light</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-dark\">\n                    <th scope=\"row\">Dark</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col>\n          <Card className=\"mb-3\">\n            <CardHeader>Contextual</CardHeader>\n            <CardBody>\n              <Table dark>\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Type</th>\n                    <th scope=\"col\">Column heading</th>\n                    <th scope=\"col\">Column heading</th>\n                    <th scope=\"col\">Column heading</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr className=\"table-active\">\n                    <th scope=\"row\">Active</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Default</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n\n                  <tr className=\"table-primary\">\n                    <th scope=\"row\">Primary</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-secondary\">\n                    <th scope=\"row\">Secondary</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-success\">\n                    <th scope=\"row\">Success</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-danger\">\n                    <th scope=\"row\">Danger</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-warning\">\n                    <th scope=\"row\">Warning</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-info\">\n                    <th scope=\"row\">Info</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-light\">\n                    <th scope=\"row\">Light</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                  <tr className=\"table-dark\">\n                    <th scope=\"row\">Dark</th>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                    <td>Column content</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Card className=\"mb-3\">\n            <CardHeader>Responsive</CardHeader>\n            <CardBody>\n              <Table responsive>\n                <thead>\n                  <tr>\n                    <th align=\"center\">Title</th>\n                    <th>Month</th>\n                    <th>Views</th>\n                    <th>Likes</th>\n                    <th>Rating</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {movie\n                    .filter((item) => {\n                        if (searchmonth ==\"\") {\n                        return item;\n                        } else if (\n                        item.plTitle.toLowerCase().includes(searchmonth.toLowerCase()) || item.fTitle.toLowerCase().includes(searchmonth.toLowerCase())\n                        ){\n                        return item;\n                        }\n                        // if (search ==\"\") {\n                        //   return item;\n                        // } else if (\n                        //   item.fTitle.toLowerCase().includes(search.toLowerCase())\n                        //   ){\n                        //   return item;\n                        // }\n                    })\n                    .map((item) => {\n                        return (\n                        <tr key={item.Index}>\n                            <td component=\"th\" scope=\"row\">\n                            {item.fTitle}\n                            </td>\n                            <td align=\"left\">\n                            {item.plTitle}\n                            </td>\n                            <td align=\"left\">\n                            {item.views}\n                            </td>\n                            <td align=\"left\">\n                            {item.likes}\n                            </td>\n                            <td align=\"left\">\n                            {item.Rating}\n                            </td>\n                        </tr>\n                        );\n                    })}  \n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Card className=\"mb-3\">\n            <CardHeader>Size</CardHeader>\n            <CardBody>\n              <Table size=\"sm\">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Username</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">1</th>\n                    <td>Mark</td>\n                    <td>Otto</td>\n                    <td>@mdo</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">2</th>\n                    <td>Jacob</td>\n                    <td>Thornton</td>\n                    <td>@fat</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">3</th>\n                    <td>Larry</td>\n                    <td>the Bird</td>\n                    <td>@twitter</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row> */}\n    </Page>\n    \n  );\n};\n\nexport default NewTablePage;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n"],"sourceRoot":""}