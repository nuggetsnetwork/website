{"version":3,"sources":["pages/SonyLIVPage.js","components/Typography.js","components/Page.js"],"names":["SonyLIVPage","_useState","useState","_useState2","Object","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","movie","setMovie","_useState3","_useState4","_useState5","_useState6","getMovieData","_ref","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","data","wrap","_context","prev","next","axios","get","sent","console","log","t0","stop","apply","this","arguments","columns","title","field","cellStyle","backgroundColor","color","headerStyle","fontSize","render","rowData","react__WEBPACK_IMPORTED_MODULE_4___default","createElement","Fragment","href","url","target","style","textDecoration","className","width","height","class","src","thumbnail","useEffect","components_Page__WEBPACK_IMPORTED_MODULE_3__","breadcrumbs","name","active","material_table__WEBPACK_IMPORTED_MODULE_6___default","options","filtering","filterCellStyle","paging","pageSize","pageSizeOptions","exportButton","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","TypoComp","Tag","tag","type","restProps","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","assign","defaultProps","bem","bn","create","Page","children","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","key"],"mappings":"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","file":"static/js/30.b004e910.chunk.js","sourcesContent":["import Page from 'components/Page';\nimport React from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, Table } from 'reactstrap';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport MaterialTable from 'material-table';\n// import { withStyles, makeStyles } from \"@material-ui/core/styles\";\n\nconst tableTypes = ['', 'bordered', 'striped', 'hover'];\n\nconst SonyLIVPage = () => {\n    // const classes = useStyles();\n    const [movie, setMovie] = useState([]);\n    const [search, setSearch] = useState(\"\");\n    const [searchmonth, setSearchmonth] = useState(\"\");\n  \n    const getMovieData = async () => {\n      try {\n        const data = await axios.get(\n          \"https://nuggetsnetwork.com/Products/sonyliv.json\"\n          // \"http://makeup-api.herokuapp.com/api/v1/products.json?brand=maybelline\"\n        );\n        console.log(data.data);\n        setMovie(data.data);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    \n    const columns=[\n        {\n            title:'Movie Name',field:'title',\n            cellStyle:{\n                backgroundColor: '#039be5',\n                color:'#FFF'\n            },\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:25\n              }\n        },\n        {\n            title:'Month',field:'plTitle',\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:25\n              }\n        },\n        {\n            title:'Views',field:'views',\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:25,\n              }\n        },\n        // {\n        //     title:'Likes',field:'likes',\n        //     headerStyle: {\n        //         backgroundColor: '#039be5',\n        //         color:'#FFF',\n        //         fontSize:25\n        //       }\n        // },\n        {\n            title:'IMDB Rating',field:'averageRating',\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:25\n              }\n        },\n        {\n          title: 'Link', field: 'url',\n          headerStyle: {\n            backgroundColor: '#039be5',\n            color: '#FFF',\n          },\n    \n          render: (rowData) => (\n            <>\n              <a\n                href={rowData.url}\n                target=\"_blank\"\n                style={{ textDecoration: 'none' }}\n              >\n                <div className=\"text-center\">\n                  <img width=\"100px\" height=\"100px\" class=\"rounded mr-2 mb-2 media-object\" src={rowData.thumbnail} />\n                </div>\n              </a>\n            </>\n          ),\n    \n        }\n    ]\n\n    useEffect(() => {\n      getMovieData();\n    }, []);\n  return (\n    <Page\n      title=\"SonyLIV\"\n      breadcrumbs={[{ name: 'sonyliv', active: true }]}\n      className=\"SonyLIVPage\"\n    >\n    \n    <MaterialTable title=\"SonyLIV Trailers Tracker\"\n        data={movie}\n        columns={columns}\n        options={{\n            filtering:true,\n            filterCellStyle:{\n                backgroundColor: '#A9E3FF',\n                color:'#FFF'\n            },\n            paging:true,\n            pageSize:10,\n            pageSizeOptions: [25, 50, 100, 250],\n            exportButton:true\n        }}\n        />\n    </Page>\n    \n  );\n};\n\nexport default SonyLIVPage;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n"],"sourceRoot":""}